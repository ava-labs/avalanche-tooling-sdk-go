syntax = "proto3";

package avalanche.account.v1;

option go_package = "github.com/ava-labs/avalanche-tooling-sdk-go/api/proto";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

// AccountService provides account-specific operations
service AccountService {
  
  // Get P-Chain address for specific network
  rpc GetPChainAddress(GetPChainAddressRequest) returns (GetPChainAddressResponse) {
    option (google.api.http) = {
      get: "/v1/account/{account_id}/p-chain-address"
    };
  }
  
  // Get keychain information
  rpc GetKeychain(GetKeychainRequest) returns (GetKeychainResponse) {
    option (google.api.http) = {
      get: "/v1/account/{account_id}/keychain"
    };
  }
}


message GetPChainAddressRequest {
  string account_id = 1;
  string network = 2;
}

message GetPChainAddressResponse {
  string p_chain_address = 1;
}

message GetKeychainRequest {
  string account_id = 1;
}

message GetKeychainResponse {
  repeated string addresses = 1;
  // Note: In a real implementation, you might want to return
  // keychain metadata rather than the actual keys for security
}
